import{_ as p,c as a,o as e,b as m}from"./app-Gl34POWz.js";const t={},c=m('<p>我们从 0 到 1 实现了和 <a href="https://play.vuejs.org/" target="_blank" rel="noopener noreferrer">vue playground</a> 功能一样的项目：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7f6d276902e2434e9f715d4380f7f54e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2782&amp;h=1364&amp;s=919630&amp;e=gif&amp;f=63&amp;b=fdfdfd" alt=""></p><p>整体测试一下 react playground 的功能：</p><p>我们用 create-vite 创建的项目，进入项目，把开发服务跑起来：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>npm run dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/71d44af4619f4e8faba7b26367b411b8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=990&amp;h=512&amp;s=62848&amp;e=png&amp;b=191919" alt=""></p><p>浏览器访问下：</p><p>我们可以在左侧编辑器写组件和样式，然后在右边实时预览：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/55e1b2011f4b436881e2d641fcd4621a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2840&amp;h=1356&amp;s=928235&amp;e=gif&amp;f=69&amp;b=fdfdfd" alt=""></p><p>css 和 ts 代码都有提示：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b7f038ad53c745deadfa18ac2f19100c~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1264&amp;h=964&amp;s=182109&amp;e=png&amp;b=fdfdfc" alt=""></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d72ea10b45604a19bfd3428279b457a6~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1034&amp;h=686&amp;s=143117&amp;e=png&amp;b=fafafa" alt=""></p><p>并且我们后面引入的 npm 包也会有类型提示：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/93d9b8102fe5436e916a6ad5a9c189cc~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1112&amp;h=702&amp;s=115448&amp;e=png&amp;b=fcfcfb" alt=""></p><p>但额外引入的 npm 包不能直接用：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/da19a5272a5b4d4780debf418225c12b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2832&amp;h=1378&amp;s=236393&amp;e=png&amp;b=ffffff" alt=""></p><p>需要在 import-map.json 里配置下才行：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d3ac6b4a440d4e3bb39e055ac3637ce1~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2630&amp;h=1166&amp;s=178337&amp;e=png&amp;b=fffefe" alt=""></p><p>文件可以新增、删除、修改：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d239832d560a4a9e92c589ce3178d296~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2840&amp;h=1356&amp;s=619432&amp;e=gif&amp;f=70&amp;b=fdfdfd" alt=""></p><p>比如我们新增一个 Aaa.tsx 组件</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/72babc98d417498ba89e42ccd4a97b40~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1048&amp;h=606&amp;s=77490&amp;e=png&amp;b=fefefd" alt=""></p><p>还有它的样式 Aaa.css</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c272d4fb92214a6ea35bd1bde7dff3d8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1154&amp;h=526&amp;s=69102&amp;e=png&amp;b=fefefd" alt=""></p><p>在 App.tsx 里引入后就可以使用：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ca1b162f854e4b608b3c9c5c4461a6f8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2642&amp;h=1198&amp;s=255120&amp;e=png&amp;b=fffefe" alt=""></p><p>你可以直接打开<a href="http://localhost:5173/#eNqNVV9v2zYQ/yqcgsI2ZsmyEreZlgTtugHrwzage9jDtAdapCQ2FCmQlGPX8HffkdQ/O97QKLapu9/9P94dgxozERm9D9JjIHBNg3QkLQOORdni0lLNoaE6V6wxQN9h3loiqxupDPpMcW5QoWSNZsqeZ5mYsn7+47cpNySyXuWcUWGBA/RD03SoaAVnx+rFoxwkDf0spZkTmbc1yEYlNb9wao8/HT6R+UwBd7b4bhEpKghV80wg+HuweldPmVhkIjgtA3i9CLinfHO8R9Rq+qcBh5b2hE7XY/dxRLnWI41LgnXV4f1LSPXsxzELGI9ZwNhyMlG0IjdMCpuj+QIdbWS5FNqgv3PZCrNEmpqP9vQPehycm8cQMkL2o6hplUB9SiAb9tcmB2Obm+6tWj/9SjmX6C+pODl6/yJMyPz29naJkiRZnB5WgBokCNuhnGOtf4dcPs5yrMhs4AJ/2xoDfkvxkbP8+fEI3j8+Dd7O5859R3Mn9D1aL05P/sw0OroT2PR6RrsrMNy9PfgAINaTzRXduzwSWuCWu64a6w6luKi7pZzV3RP6gqe2p3y+CylMWOCa8UOKPglDFWT9oA2tw5Yt0YcdFQxIkL8dNSzHQFIMcwBhoUNNFSuglgiFL3T7zECV1adr0F8xUaYICwNwhjUlHlfLr6HU+1fAUuGDzjGnDua4L5SVlUnRXRw7ImeChlVHXEcbR8wllypFqtzOk80G9Z8Vun/3ZuEQhu5N6C+PsyQbw2r2lXJasi3jzBxGmAZ6iMmXVlsTcfzGsbY4fy4V1IyEnbmb5M4+owehziu4tCk4Ce4hgtXzGIg+CFNRzXSKhBQ2QlfTm7EMNd6HL4yYCqwm93Gzd8IN9KhzOVG0dpQaq5KJFMUIt0aOfkOKSyDnMDWo6vVvJTl49YTphmOocMGpV10z0Ru8TXp7ljjkN4531blN7xPHOQ0ZNAhEc26vWk96ymYSdEdJ5/lF8daDk/4qOcEh3jh6S2tA9cJnXcpEBZU0k/Q6U+sptm+dTdc6eau0rVsjWefx1aqusX08VypoGFDb7JGWnBFkFLR8g6GTvG2PCBUmrIVc3HdJdDBm51raQ5x6CCrZ6POw00ruqPLBT7Hgytu7t3lh79YUXsCS0Mvz13DHNNty6rXI1thMw6UBv22PTG6mBdsr4G30qt/XlDCM5o2iBVXaM8/buZvNk7Ex3LubZH27uXvnIr+a0sIFgZCzBYhJua/jf7BPLwL/dsr5LRLWuIm+aCkm0+6Sczb1Oko/9pzRrBPRWZD2bmSB23GWkgWVMY1OVyuq60hXK8d5v76PkijOAsj9RGCy8v9b1oJeyw9L8qrghHueCFhsl2u+o3zzmvcb2O3viy2Msd3CZ6vVbUJGHrMAY5wFT/DdL6mrawlAg58Xa6mj/M9augHtfUkmF3vTj6eh6baAf9VxMNjh5pVuugan0796w1lP" target="_blank" rel="noopener noreferrer">这个 url</a> 试试</p><p>这个通过 url 分享代码也是 playgrond 的功能。</p><p>点击右上角的分享按钮可以复制分享链接：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cef550b88cd64d52b373a7876a86e4b3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2840&amp;h=1356&amp;s=264451&amp;e=gif&amp;f=22&amp;b=fdfdfd" alt=""></p><p>此外，还可以下载代码到本地：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a81a1ce7b90a4cf4ac638c240f22eb9c~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2840&amp;h=1356&amp;s=3769565&amp;e=gif&amp;f=70&amp;b=fdfdfd" alt=""></p><p>还有切换亮色、暗色主题：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d67d379551a04728b3cf7de3c8e10107~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2840&amp;h=1356&amp;s=643387&amp;e=gif&amp;f=33&amp;b=fdfdfd" alt=""></p><p>这些就是 React Playground 的全部功能。</p><p>最终实现的效果还不错。</p><p>回顾下我们的开发过程：</p><p>我们首先写了下布局：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7d5c8a87949345848d0bd5af2f771a8a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2108&amp;h=1306&amp;s=165328&amp;e=gif&amp;f=27&amp;b=fefefe" alt=""></p><p>用 <a href="https://www.npmjs.com/package/allotment" target="_blank" rel="noopener noreferrer">allotment</a> 实现的 split-pane，两边可以通过拖动改变大小。</p><p>然后集成 @monaco-editor/react 实现的编辑器。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d54980cb577f436d8e4d15e48a4fb539~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1626&amp;h=798&amp;s=75944&amp;e=png&amp;b=fffffe" alt=""></p><p>还用 @typescript/ata 包实现了代码改变时自动下载 dts 类型包的功能。</p><p>这样，在编辑器里写代码就有 ts 类型提示了。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/96d008524701479fbf6eb1bdd213af2b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1960&amp;h=532&amp;s=490136&amp;e=png&amp;b=fbfbfb" alt=""></p><p>然后我们实现了多文件的切换：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a6b606b0784f4a61993497a121650c3b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2210&amp;h=1098&amp;s=514149&amp;e=gif&amp;f=32&amp;b=fdfdfd" alt=""></p><p>在 Context 中保存全局数据，比如 files、selectedFileName，还有对应的增删改的方法。</p><p>对 Context.Provider 封装了一层来注入初始化数据和方法，提供了 initFiles 的信息。</p><p>然后在 FileNameList 里读取 context 里的 files 来渲染文件列表。</p><p>点击 tab 的时候切换 selectedFileName，从而切换编辑器的内容。</p><p>然后实现了编译以及在 iframe 里预览。</p><p>使用 @babel/standalone 做的 tsx 代码的编译，编译过程中需要对 .tsx、.css、.json 等模块的 import 做处理，变成 blob url 的方式。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/51233e2e566e452984d5bc618307bf51~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2782&amp;h=690&amp;s=249318&amp;e=png&amp;b=fffffe" alt=""></p><p>通过 babel 插件实现了对 import 语句的修改：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ad6d09400c264a4da97634d177a3cae9~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1674&amp;h=1422&amp;s=303099&amp;e=png&amp;b=1f1f1f" alt=""></p><p>css 模块包一层代码加到 head 的 style 标签里，json 包一层代码直接 export，而 tsx 模块直接 babel 编译即可。</p><p>对于 react、react-dom/client 这种，用浏览器的 import maps 来引入。</p><p>然后通过 iframe 实现了预览：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e2e0cb9853964d4e9c9844c273f8fb43~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1260&amp;h=1490&amp;s=324643&amp;e=png&amp;b=1f1f1f" alt=""></p><p>替换 html 模版里 import maps 和 src 部分的 script 标签后，同样用 blob url 设置为 iframe 的 src 就可以了。</p><p>这样就可以预览了：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c0db0b3acda04ebba949c3c30cc62e22~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1482&amp;h=1190&amp;s=251029&amp;e=png&amp;b=fefdfd" alt=""> iframe 的代码如下：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a1f2fe71111c4632a935a8b6b45186e5~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1478&amp;h=1090&amp;s=273922&amp;e=png&amp;b=f8f8f8" alt=""></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c0db0b3acda04ebba949c3c30cc62e22~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1482&amp;h=1190&amp;s=251029&amp;e=png&amp;b=fefdfd" alt=""></p><p>正是替换了 importmap 和 src 部分的 html，并且 css 也被添加到了 head 里的 style 标签下。</p><p>然后我们实现了文件的新增、删除、修改：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bbb5ad3cc79f488ea87abb2a2c51234c~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2098&amp;h=1272&amp;s=365503&amp;e=gif&amp;f=39&amp;b=fefefe" alt=""></p><p>main.tsx、App.tsx、import-map.json 设置为 readonly，不可编辑和删除。</p><p>之后实现了错误的显示，在 iframe 里监听 error 事件，发生错误的时候通过 postMessage 传递给父窗口。</p><p>父窗口里监听 message 事件传过来的错误，用 Message 组件显示。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ddab8bd9d9c94d8993008b7ff3648bc8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1736&amp;h=1046&amp;s=1817146&amp;e=gif&amp;f=51&amp;b=fdfcfc" alt=""></p><p>然后实现了主题切换：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1ad369f4498e4a8ca831b3ee887d70d0~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2868&amp;h=1314&amp;s=537354&amp;e=gif&amp;f=43&amp;b=fefefe" alt=""></p><p>主题切换就是在根元素加一个 .light、.dark 的 className，里面声明 css 变量，因为 css 变量可以在子元素里生效，子元素写样式基于这些变量，那切换了 className 也就切换了这些变量的值，从而实现主题切换。</p><p>之后实现了通过链接分享代码的功能：</p><p>原理就是把 files 信息 JSON.stringify 之后保存到 location.hash。</p><p>然后初始化的时候从 location.hash 读取出来 JSON.parse 之后设置到 files。</p><p>这个过程中还要做下压缩，用 fflate 这个包来对字符串进行压缩，然后用 btoa 转为 asc 码字符串。</p><p>代码下载则是基于 jszip 和 file saver 包实现的。</p><p>这样，playground 里写的代码内容就可以通过 url 分享出去，并且可以下载了。</p><p>之后做了下性能优化：</p><p>用 Performance 分析了页面的 Event Loop，发现有 long task，性能优化的目标就是消除 long task。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0bdcbbcbc73043488d91efb5641b9379~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2604&amp;h=828&amp;s=294387&amp;e=png&amp;b=f7f1ed" alt=""></p><p>分析发现是 babel 编译的逻辑导致的。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2c142b810445436f8cc9d542a9ce3edf~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1796&amp;h=1034&amp;s=172285&amp;e=png&amp;b=e6ebcd" alt=""></p><p>我们通过 Web Worker 把 babel 编译的逻辑放到了 worker 线程跑，通过 message 事件和 postMessage 和主线程通信。</p><p>拆分后功能正常，再用 Performance 分析，发现耗时逻辑被转移到了 worker 线程，主线程这个 long task 没有了。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8e4cb528a96048ccb57e311670deebfa~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2066&amp;h=1106&amp;s=301171&amp;e=png&amp;b=f5efe9" alt=""></p><p>这就是我们开发这个 playground 的全过程。</p><p>其实这个项目完全可以写到简历里，而且非常好讲故事，比如你开发的组件库，用这个 playground 来实现组件的在线预览。</p><p>而且这个项目有挺多技术亮点的：</p><ul><li>用 @monaco-editor/react 实现了网页版 typescript 编辑器，并且实现了自动类型导入</li><li>通过 @babel/standalone 实现了文件编译，并且写了一个 babel 插件实现了 import 的 source 的修改</li><li>通过 blob url 来内联引入其他模块的代码，通过 import maps 来引入 react、react-dom 等第三方包的代码</li><li>通过 iframe 实现了预览功能，并且通过 postMessage 和父窗口通信来显示代码运行时的错误</li><li>基于 css 变量 + context 实现了主题切换功能</li><li>通过 fflate + btoa 实现了文件内容的编码、解码，可以通过链接分享代码</li><li>通过 Performance 分析性能问题，并通过 Web Worker 拆分编译逻辑到 worker 线程来进行性能优化，消除了 long lask</li></ul><p>而且这些技术点也挺有价值的，通过 playground 项目对这些技术点有很好的掌握之后，在别的地方也能用到。</p><p>总之，大家可以把这个项目消化吸收，内化成你自己的东西。</p>',95),f=[c];function s(i,b){return e(),a("div",null,f)}const o=p(t,[["render",s],["__file","index.html.vue"]]),l=JSON.parse(`{"path":"/notes/Web-dev/React/g39457nz/","title":"第61章—ReactPlayground项目实战：总结","lang":"zh-CN","frontmatter":{"title":"第61章—ReactPlayground项目实战：总结","createTime":"2024/09/19 18:20:17","permalink":"/notes/Web-dev/React/g39457nz/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[],"readingTime":{"minutes":7.52,"words":2256},"git":{"createdTime":1726740297000,"updatedTime":1726741807000,"contributors":[{"name":"hey","email":"1760967618@qq.com","commits":3}]},"filePathRelative":"notes/Web-dev/React/第61章—ReactPlayground项目实战：总结.md"}`);export{o as comp,l as data};
